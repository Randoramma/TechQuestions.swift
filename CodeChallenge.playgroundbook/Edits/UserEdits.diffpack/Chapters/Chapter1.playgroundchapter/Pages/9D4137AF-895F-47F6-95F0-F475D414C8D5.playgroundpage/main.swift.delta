<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import Foundation 

/**
 You are given a string s representing a 12-hour format time where some of the digits (possibly none) are replaced with a "?".

 12-hour times are formatted as "HH:MM", where HH is between 00 and 11, and MM is between 00 and 59. The earliest 12-hour time is 00:00, and the latest is 11:59.

 You have to replace all the "?" characters in s with digits such that the time we obtain by the resulting string is a valid 12-hour format time and is the latest possible.

 Return the resulting string.

  

 Example 1:

 Input: s = "1?:?4"

 Output: "11:54"

 Explanation: The latest 12-hour format time we can achieve by replacing "?" characters is "11:54".

 Example 2:

 Input: s = "0?:5?"

 Output: "09:59"

 Explanation: The latest 12-hour format time we can achieve by replacing "?" characters is "09:59".

  

 Constraints:

 s.length == 5
 s[2] is equal to the character ":".
 All characters except s[2] are digits or "?" characters.
 The input is generated such that there is at least one time between "00:00" and "11:59" that you can obtain after replacing the "?" characters.

class Solution {
func findLatestTime(_ s: String) -&gt; String {
    if !s.contains("?") {
        return s
    }
    var digits: [Character] = Array(s)
    
    for (index,value) in digits.enumerated() {
        if value == "?" {
            if index == 0 { 
                // if minutes is any other number than "0" or "1".. this should be a "0". 
                digits[0] = ("01?".contains(digits[1])) ? "1" : "0"  
            } else if index == 1 {
                digits[1] = (digits[0] == "0") ? "9" : "1"
            } else if index == 3 {
                digits[index] = "5"
            } else if index == 4 {
                digits[index] = "9"
            } else {
                // do nothing
            }
        }
    }
    return String(digits)
}
}      


let input = "1?:59"

let solution = Solution()

print(solution.findLatestTime(input))
 */
</string>
			<key>ModifiedRange</key>
			<string>{1, 1968}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{1, 0}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
