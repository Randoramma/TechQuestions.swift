<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import Foundation 

/**
A word is considered valid if:

It contains a minimum of 3 characters.✅
It contains only digits (0-9), and English letters (uppercase and lowercase).✅
It includes at least one vowel.
It includes at least one consonant.
You are given a string word.

Return true if word is valid, otherwise, return false.

Notes:

'a', 'e', 'i', 'o', 'u', and their uppercases are vowels.
A consonant is an English letter that is not a vowel.
 

Example 1:

Input: word = "234Adas"

Output: true

Explanation:

This word satisfies the conditions.

Example 2:

Input: word = "b3"

Output: false

Explanation:

The length of this word is fewer than 3, and does not have a vowel.

Example 3:

Input: word = "a3$e"

Output: false

Explanation:

This word contains a '$' character and does not have a consonant.

 

Constraints:

1 &lt;= word.length &lt;= 20
*/

func isValid(_ word: String) -&gt; Bool {

    if word.count &lt; 3 { 
        return false
    }
    
    var isValid = word.allSatisfy({ $0.isLetter || $0.isNumber })
    let vowels = CharacterSet(charactersIn: "aeiouAEIOU")
    
    if isValid { 
        isValid = word.unicodeScalars.contains { vowels.contains($0) }
    }
    
     let consants = CharacterSet(charactersIn: "qwrtypsdfghjklzxcvbnmQWRTYPSDFGHJKLZXCVBNM")
    if isValid { 
        isValid = word.unicodeScalars.contains { consants.contains($0) }
    }

    return isValid 
}


let word = "hello"

let ab = "ab" // false
let a1b = "a1b"// true 
let a1Exclaimation = "a1!"// false
let abspace = "abc d" // false
let bcd = "bcd" // false 
let aei = "aei" // false 
let bait = "bait" // true 
let aio = "aio" // false 
let aBc123 = "aBc123" // true 
let Ab1 = "Ab1" // true 
let CorrectHorseBatteryStaple123 = "CorrectHorseBatteryStaple123" // true 
let oneAt = "1@" // false 

let testcases = [ab, a1b, a1Exclaimation, abspace, bcd, aei, bait, aio, aBc123,Ab1, CorrectHorseBatteryStaple123, oneAt ]

for item in testcases { 
    print(isValid(item))
}
</string>
			<key>ModifiedRange</key>
			<string>{0, 1971}</string>
			<key>OriginalContent</key>
			<string>
</string>
			<key>OriginalRange</key>
			<string>{0, 1}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
