<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>
import Foundation 

/*
 Given a proposed String, write an in-place algorithm to remove all whitespace. For this challenge, assume you donâ€™t have access to a regular expression engine or SDK library function:
 */

let sequence = "The qu ick fox jum ped over the lazy d o g"

func zipString(input: String, operand: String) -&gt; String { 
    let space = " "
    let zippedString = input.replacingOccurrences(of: operand, with: "")
    return zippedString
}

print(zipString(input: sequence, operand: " ")) 
</string>
			<key>ModifiedRange</key>
			<string>{1, 504}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{1, 0}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
