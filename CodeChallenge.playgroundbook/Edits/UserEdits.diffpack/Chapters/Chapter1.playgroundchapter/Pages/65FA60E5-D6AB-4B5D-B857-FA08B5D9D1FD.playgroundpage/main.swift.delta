<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BaseFile</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/Template.playgroundpage/main.swift</string>
	<key>Diffs</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>import Foundation 


/*
 Given a matrix where every row is sorted in increasing order, return the smallest common element in all rows. If there is no common element return -1.
 Input: mat = [[1,2,3,4,5,8], [2,4,5,8,10], [3,5,7,8,9,11], [1,3,5,7,8,9]]
 Output: 5
 */
let mat = [[1,2,3,4,5,8], [2,4,5,8,10], [3,5,7,8,9,11], [1,3,5,7,8,9]]

func findSmallestElement(_ matrix: [[Int]]) -&gt; Int { 
    // first find a collection of unique common elements 
    let commonElements: Set&lt;Int&gt; = matrix.reduce(Set(matrix.last ?? [])) { result, array in 
        return result.intersection(array)
    }
    // second return the smallest of these in the collection 
    return commonElements.min() ?? -1 
}
print(findSmallestElement(mat))
</string>
			<key>ModifiedRange</key>
			<string>{0, 726}</string>
			<key>OriginalContent</key>
			<string>
</string>
			<key>OriginalRange</key>
			<string>{0, 1}</string>
		</dict>
	</array>
	<key>FormatVersion</key>
	<integer>2</integer>
</dict>
</plist>
